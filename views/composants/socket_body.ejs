<h2>Clavardage</h2>
<section id="enregistrement">
 <input type="text">
 <button onclick="enregistrement()">Enregistrement</button>
</section>

<section id='chat' style='display:none'>
	<table id='list_user'></table>
	<table id='message'></table>
	<section id='message_a_transmettre'>
		<input type="text" name="txtMessage"><button onclick="transmettre_un_message()">Transmettre</button>
	</section>
</section>

<script type="text/javascript">
 /* 
Pour établir une communication socket il faut un premier appel de
 la fonction io()
 Cette fonction est incluse dans la librairie socket.io. 
 Cette fonction déclenche un événement connect vers le serveur
 */

 let socket
 window.onload = ()=>{
	 socket = io()
	 console.log(socket.id);

	 socket.on('connect', function(){
	 	console.log('Le socket id = ' + socket.id); 
	 	/* l'événement ackUser a été transmis par le serveur */ 
	 	socket.on('valide_user', function(data){
	 		console.log('data en provenance du serveur = ' + data.user)
	 		let elmEnregistrement = document.getElementById('enregistrement')
	 		elmEnregistrement.style.display = 'none';
	 		let elmChat = document.getElementById('chat')
	 		elmChat.style.display = 'inline-block'
	 	})
	

 ///////////////////////////////////// afficher diffuser list user
		socket.on('diffuser_list_user', function(data) {
			affiche_table_users(data)
		})
 ///////////////////////////////////// afficher valide message
 		socket.on('valide_message', function(data) {
 			console.log('valide_message = ' + data)
 			afficher_mon_message(data, '#0f0')
 		})
 ///////////////////////////////////// afficher valide message
		 socket.on('diffuser_message', function(data) {
		 	console.log('diffuser_message = ' + data)
		 	afficher_mon_message(data, '#00f')
		 })
	});
}

let username;
/* ---------------------------------------------------------- */
 function enregistrement(){
 var elmUser = document.querySelector('#enregistrement input')
 username = elmUser.value
 console.log(elmUser.value)
 /* l'événement « setUser » est transmit avec un objet 
 */
 socket.emit('setUser', {user : elmUser.value})
 }

 // ---------------------------------------------------------- transmettre un message
 function transmettre_un_message(){
 var elmMessage = document.querySelector('#message_a_transmettre input')
 console.log(elmMessage.value)
 /* l'événement « setUser » est transmit avec un objet 
 */
 socket.emit('setMessage', {nom: username, message : elmMessage.value})
 }

 ///////////////////////////////////// afficher tableau users
 function affiche_table_users(data) {
 	let sChaine = '<th>Utilisateurs en ligne</th>'
	for (id in data) {
		sChaine += '<tr>'
				//+ '<td>' + id + '</td>'
				+ '<td>' + data[id] + '</td>'
				+ '</tr>'
	}
	let elmListUser = document.getElementById('list_user')
	elmListUser.innerHTML = sChaine
 }

///////////////////////////////////// afficher mon message
 function afficher_mon_message(data) {
 	let sChaine = ''
	
		sChaine += '<tr>'
				+ '<td><b>' + data['nom'] + ':' + '</b></td>'
				+ '<td class= "messageUser">' + data['message'] + '</td>'
				+ '</tr>'
	
	let elmListMessage = document.getElementById('message')
	elmListMessage.innerHTML += sChaine
	//Scroll automatique vers le bas de la boîte de clavardagechaque fois qu'un nouveau message est envoyé
	elmListMessage.scrollTop = elmListMessage.scrollHeight;
 }

 
</script>